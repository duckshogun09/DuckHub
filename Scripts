local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
	Name = "Duck Hub - Type: Script Menu",
	LoadingTitle = "Loading...",
	LoadingSubtitle = "by Duck",
	ConfigurationSaving = { Enabled = false },
	KeySystem = false
})

local HomeTab = Window:CreateTab("Home")

local message = game:HttpGet("https://raw.githubusercontent.com/duckshogun09/DuckHub/refs/heads/main/notice.txt")
HomeTab:CreateParagraph({
	Title = "Latest Announcement",
	Content = message
})

HomeTab:CreateLabel("Version: 1.0.0")

HomeTab:CreateButton({
	Name = "Join Discord",
	Callback = function()
		setclipboard("discord.gg/NF6fZapa3U")
		Rayfield:Notify({
			Title = "Discord",
			Content = "Discord link copied!",
			Duration = 4,
			Image = 6031075938
		})
	end,
})

HomeTab:CreateParagraph({
	Title = "Supported Games",
	Content = table.concat({
		"• Grow A Garden",
		"• Blox Fruits",
		"• Arise Crossover",
		"• King Legacy"
	}, "\n")
})


local ScriptTab = Window:CreateTab("Scripts")

local scriptsByPlaceId = {
	[126884695634066] = {
		["Speed Hub X"] = [[
			loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
		]],
		["No Lag Hub"] = [[
			loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/NoLag-id/No-Lag-HUB/refs/heads/main/Loader/LoaderV1.lua"))()
		]]
	},
	[2753915549] = {
		["Speed Hub X"] = [[
			loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
		]]
	},
	[1234567890] = {
		["Script A"] = [[
			print("Đây là Script A cho game thứ 3")
		]],
		["Script B"] = [[
			print("Đây là Script B cho game thứ 3")
		]]
	}
}

local scripts = scriptsByPlaceId[game.PlaceId]

if scripts then
	for name, code in pairs(scripts) do
		ScriptTab:CreateButton({
			Name = name,
			Callback = function()
				loadstring(code)()
			end,
		})
	end
else
	ScriptTab:CreateParagraph({
		Title = "Notification",
		Content = "Scripts are not available for the current game. See what games the script supports in the Home tab."
	})
end

local ServerTab = Window:CreateTab("Server")

local playerCountLabel = ServerTab:CreateLabel("Players in the server: " .. tostring(#game.Players:GetPlayers()))

game.Players.PlayerAdded:Connect(function()
    playerCountLabel:Set("Players in the server: " .. tostring(#game.Players:GetPlayers()))
end)

game.Players.PlayerRemoving:Connect(function()
    task.wait(0.5)
    playerCountLabel:Set("Players in the server: " .. tostring(#game.Players:GetPlayers()))
end)

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local PlaceID = game.PlaceId

local foundAnything = ""

local function TPReturner()
    local Site
    if foundAnything == "" then
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end

    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    else
        foundAnything = ""
    end

    for i,v in pairs(Site.data) do
        if tonumber(v.maxPlayers) > tonumber(v.playing) and tostring(v.id) ~= tostring(game.JobId) then
            local ID = tostring(v.id)
            pcall(function()
                TeleportService:TeleportToPlaceInstance(PlaceID, ID, Players.LocalPlayer)
            end)
            wait(4)
            break
        end
    end
end

ServerTab:CreateButton({
    Name = "Hop Server",
    Callback = function()
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end,
})

ServerTab:CreateInput({
    Name = "Join Server by JobId",
    PlaceholderText = "Paste JobId here",
    RemoveTextAfterFocusLost = false,
    Callback = function(jobId)
        TeleportService:TeleportToPlaceInstance(game.PlaceId, jobId, Players.LocalPlayer)
    end
})

ServerTab:CreateButton({
    Name = "Copy current JobId",
    Callback = function()
        setclipboard(game.JobId)
        Rayfield:Notify({
            Title = "JobId Copied",
            Content = "Copied the JobId of the current server to the clipboard!",
            Duration = 4,
            Image = 6035047409
        })
    end,
})

local SettingTab = Window:CreateTab("Setting")
local antiAfkConnection = nil

local function startAntiAfk()
    if antiAfkConnection then return end
    local vu = game:GetService("VirtualUser")
    antiAfkConnection = game.Players.LocalPlayer.Idled:Connect(function()
        vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    end)
end

local function stopAntiAfk()
    if antiAfkConnection then
        antiAfkConnection:Disconnect()
        antiAfkConnection = nil
    end
end

SettingTab:CreateToggle({
    Name = "Anti-AFK",
    CurrentValue = false,
    Callback = function(enabled)
        if enabled then
            startAntiAfk()
        else
            stopAntiAfk()
        end
    end,
})
