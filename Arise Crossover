-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("Arise Crossover | Hub", "Ocean") -- Theme bạn có thể đổi, ví dụ: "DarkTheme", "BloodTheme", "Ocean", "GrapeTheme"

local AutoFarm = false
local SelectedMob = "Soondo"

-- Tab Farm
local FarmTab = Window:NewTab("Farm")
local FarmSection = FarmTab:NewSection("Farm Mobs")

-- Dropdown chọn mob
FarmSection:NewDropdown("Chọn Mob", "Chọn quái để farm", {"Soondo", "Mob1", "Mob2", "Mob3"}, function(currentOption)
    SelectedMob = currentOption
    Library:Notify("Thông báo", "Bạn đã chọn: " .. currentOption, 3)
end)

-- Toggle Auto Farm
FarmSection:NewToggle("Auto Farm Mobs", "Tự động farm quái đã chọn", false, function(state)
    AutoFarm = state
    if AutoFarm then
        AutoFarmFunction()
    end
end)

-- Auto Farm Function
function AutoFarmFunction()
    task.spawn(function()
        while AutoFarm do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local mobs = workspace:FindFirstChild("Mobs")

                if mobs and character and character:FindFirstChild("HumanoidRootPart") then
                    for _, mob in pairs(mobs:GetChildren()) do
                        if mob.Name == SelectedMob and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                            -- Teleport tới mob đã chọn
                            character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)

                            -- Tấn công mob
                            local args = {[1] = mob}
                            game:GetService("ReplicatedStorage").Remotes.Combat:FireServer(unpack(args))
                            task.wait(0.2)
                        end
                    end
                end
            end)
            task.wait(0.1)
        end
    end)
end
