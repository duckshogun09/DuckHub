local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local function startAntiAfk()
    local vu = game:GetService("VirtualUser")
    game.Players.LocalPlayer.Idled:Connect(function()
        vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    end)
end

startAntiAfk()

local Window = Rayfield:CreateWindow({
    Name = "DuckX Hub - Type: Script Menu",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by Duck",
    KeySystem = false
})

local HomeTab = Window:CreateTab("Home")

local message = game:HttpGet("https://raw.githubusercontent.com/duckshogun09/DuckHub/refs/heads/main/notice.txt")
HomeTab:CreateParagraph({
    Title = "Latest Announcement",
    Content = message
})

HomeTab:CreateLabel("Anti-AFK: Auto enabled")

HomeTab:CreateLabel("Version: 1.0.0")

HomeTab:CreateButton({
    Name = "Join Discord",
    Callback = function()
        setclipboard("discord.gg/NF6fZapa3U")
        Rayfield:Notify({
            Title = "Discord",
            Content = "Discord link copied!",
            Duration = 4,
            Image = 6031075938
        })
    end,
})

HomeTab:CreateParagraph({
    Title = "Supported Games",
    Content = table.concat({
        "• Grow A Garden",
        "• Blox Fruits",
        "• Arise Crossover",
        "• King Legacy"
    }, "\n")
})


local ScriptTab = Window:CreateTab("Scripts")

local scriptsByPlaceId = {
    [126884695634066] = {
        ["Speed Hub X"] = [[
            loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
        ]],
        ["No Lag Hub"] = [[
            loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/NoLag-id/No-Lag-HUB/refs/heads/main/Loader/LoaderV1.lua"))()
        ]]
    },
    [2753915549] = {
        ["Speed Hub X"] = [[
            loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
        ]]
    },
    [1234567890] = {
        ["Script A"] = [[
            print("Đây là Script A cho game thứ 3")
        ]],
        ["Script B"] = [[
            print("Đây là Script B cho game thứ 3")
        ]]
    }
}

local scripts = scriptsByPlaceId[game.PlaceId]

if scripts then
    for name, code in pairs(scripts) do
        ScriptTab:CreateButton({
            Name = name,
            Callback = function()
                loadstring(code)()
            end,
        })
    end
else
    ScriptTab:CreateParagraph({
        Title = "Notification",
        Content = "Scripts are not available for the current game. See what games the script supports in the Home tab."
    })
end

local ServerTab = Window:CreateTab("Server")

local playerCountLabel = ServerTab:CreateLabel("Players in the server: " .. tostring(#game.Players:GetPlayers()))

game.Players.PlayerAdded:Connect(function()
    playerCountLabel:Set("Players in the server: " .. tostring(#game.Players:GetPlayers()))
end)

game.Players.PlayerRemoving:Connect(function()
    task.wait(0.5)
    playerCountLabel:Set("Players in the server: " .. tostring(#game.Players:GetPlayers()))
end)

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local PlaceID = game.PlaceId

local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour

local File = pcall(function()
    AllIDs = HttpService:JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
end

local function TPReturner()
    local Site
    if foundAnything == "" then
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end

    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end

    local minPlayers = math.huge
    local bestServerId = nil

    for _, v in pairs(Site.data) do
        local Possible = true
        local ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) and ID ~= tostring(game.JobId) then
            for i, Existing in pairs(AllIDs) do
                if i ~= 1 then
                    if ID == tostring(Existing) then
                        Possible = false
                        break
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
            end
            if Possible and tonumber(v.playing) < minPlayers then
                minPlayers = tonumber(v.playing)
                bestServerId = ID
            end
        end
    end

    if bestServerId then
        table.insert(AllIDs, bestServerId)
        pcall(function()
            writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
            TeleportService:TeleportToPlaceInstance(PlaceID, bestServerId, Players.LocalPlayer)
        end)
        wait(4)
    end
end

ServerTab:CreateLabel("When you press the button, it will automatically hop servers and will not stop until you join a different server.")

ServerTab:CreateButton({
    Name = "Hop Server",
    Callback = function()
        local countdown = 5
        for i = countdown, 1, -1 do
            Rayfield:Notify({
                Title = "Hop Server",
                Content = "Switching server in " .. i .. " seconds...",
                Duration = 1,
                Image = 6035047409
            })
            task.wait(1)
        end
        while true do
            local success, err = pcall(function()
                TPReturner()
            end)
            if not success then
                Rayfield:Notify({
                    Title = "Error",
                    Content = tostring(err),
                    Duration = 4,
                    Image = 6035047409
                })
                break
            end
            task.wait(5)
        end
    end,
})

ServerTab:CreateInput({
    Name = "Join Server by JobId",
    PlaceholderText = "Paste JobId here",
    RemoveTextAfterFocusLost = false,
    Callback = function(jobId)
        TeleportService:TeleportToPlaceInstance(game.PlaceId, jobId, Players.LocalPlayer)
    end
})

ServerTab:CreateButton({
    Name = "Copy current JobId",
    Callback = function()
        setclipboard(game.JobId)
        Rayfield:Notify({
            Title = "JobId Copied",
            Content = "Copied the JobId of the current server to the clipboard!",
            Duration = 4,
            Image = 6035047409
        })
    end,
})
